{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Project-AS\\\\Musik\\\\App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport PlayerWidgets from \"./components/PlayerWidget\";\nimport Amplify from 'aws-amplify';\nimport config from \"./aws-exports\";\nAmplify.configure(config);\nimport { AppContext } from \"./AppContext\";\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      songId = _useState2[0],\n      _setSongId = _useState2[1];\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, React.createElement(AppContext.Provider, {\n      value: {\n        songId: songId,\n        setSongId: function setSongId(id) {\n          return _setSongId(id);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), React.createElement(StatusBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), React.createElement(PlayerWidgets, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["D:/Project-AS/Musik/App.tsx"],"names":["StatusBar","React","useState","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","PlayerWidgets","Amplify","config","configure","AppContext","App","isLoadingComplete","colorScheme","songId","setSongId","id"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP;AACAD,OAAO,CAACE,SAAR,CAAkBD,MAAlB;AAGA,SAASE,UAAT;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGT,kBAAkB,EAA5C;AACA,MAAMU,WAAW,GAAGT,cAAc,EAAlC;;AAF4B,kBAIAH,QAAQ,CAAc,IAAd,CAJR;AAAA;AAAA,MAIrBa,MAJqB;AAAA,MAIbC,UAJa;;AAM5B,MAAI,CAACH,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAC1BE,QAAAA,MAAM,EAANA,MAD0B;AAE1BC,QAAAA,SAAS,EAAE,mBAACC,EAAD;AAAA,iBAAgBD,UAAS,CAACC,EAAD,CAAzB;AAAA;AAFe,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAEH,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAYD;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState} from 'react';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\nimport useCachedResources from './hooks/useCachedResources';\r\nimport useColorScheme from './hooks/useColorScheme';\r\nimport Navigation from './navigation';\r\nimport PlayerWidgets from './components/PlayerWidget';\r\n\r\nimport Amplify from 'aws-amplify'\r\nimport config from './aws-exports'\r\nAmplify.configure(config)\r\n\r\n\r\nimport { AppContext } from './AppContext';\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n   \r\n  const [songId, setSongId] = useState<string|null>(null);\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider>\r\n        <AppContext.Provider value={{\r\n          songId,\r\n          setSongId: (id: string) => setSongId(id),\r\n        }}>\r\n          <Navigation colorScheme={colorScheme} />\r\n          <StatusBar />\r\n          <PlayerWidgets />\r\n        </AppContext.Provider>\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}