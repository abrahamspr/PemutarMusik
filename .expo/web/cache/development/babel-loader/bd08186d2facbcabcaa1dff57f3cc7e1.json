{"ast":null,"code":"export var getAlbumCategory = \"\\n  query GetAlbumCategory($id: ID!) {\\n    getAlbumCategory(id: $id) {\\n      id\\n      title\\n      albums {\\n        items {\\n          id\\n          name\\n          by\\n          numberOfLikes\\n          imageUri\\n          artistsHeadline\\n          albumCategoryId\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listAlbumCategorys = \"\\n  query ListAlbumCategorys(\\n    $filter: ModelAlbumCategoryFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listAlbumCategorys(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        title\\n        albums {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getAlbum = \"\\n  query GetAlbum($id: ID!) {\\n    getAlbum(id: $id) {\\n      id\\n      name\\n      by\\n      numberOfLikes\\n      imageUri\\n      artistsHeadline\\n      songs {\\n        items {\\n          id\\n          imageUri\\n          uri\\n          title\\n          artist\\n          albumId\\n          createdAt\\n          updatedAt\\n        }\\n        nextToken\\n      }\\n      albumCategoryId\\n      albumCategory {\\n        id\\n        title\\n        albums {\\n          nextToken\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listAlbums = \"\\n  query ListAlbums(\\n    $filter: ModelAlbumFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listAlbums(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        name\\n        by\\n        numberOfLikes\\n        imageUri\\n        artistsHeadline\\n        songs {\\n          nextToken\\n        }\\n        albumCategoryId\\n        albumCategory {\\n          id\\n          title\\n          createdAt\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";\nexport var getSong = \"\\n  query GetSong($id: ID!) {\\n    getSong(id: $id) {\\n      id\\n      imageUri\\n      uri\\n      title\\n      artist\\n      albumId\\n      album {\\n        id\\n        name\\n        by\\n        numberOfLikes\\n        imageUri\\n        artistsHeadline\\n        songs {\\n          nextToken\\n        }\\n        albumCategoryId\\n        albumCategory {\\n          id\\n          title\\n          createdAt\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\";\nexport var listSongs = \"\\n  query ListSongs(\\n    $filter: ModelSongFilterInput\\n    $limit: Int\\n    $nextToken: String\\n  ) {\\n    listSongs(filter: $filter, limit: $limit, nextToken: $nextToken) {\\n      items {\\n        id\\n        imageUri\\n        uri\\n        title\\n        artist\\n        albumId\\n        album {\\n          id\\n          name\\n          by\\n          numberOfLikes\\n          imageUri\\n          artistsHeadline\\n          albumCategoryId\\n          createdAt\\n          updatedAt\\n        }\\n        createdAt\\n        updatedAt\\n      }\\n      nextToken\\n    }\\n  }\\n\";","map":{"version":3,"sources":["D:/Project-AS/Musik/src/graphql/queries.ts"],"names":["getAlbumCategory","listAlbumCategorys","getAlbum","listAlbums","getSong","listSongs"],"mappings":"AAIA,OAAO,IAAMA,gBAAgB,oZAAtB;AAwBP,OAAO,IAAMC,kBAAkB,yXAAxB;AAoBP,OAAO,IAAMC,QAAQ,0kBAAd;AAqCP,OAAO,IAAMC,UAAU,mjBAAhB;AA+BP,OAAO,IAAMC,OAAO,shBAAb;AAkCP,OAAO,IAAMC,SAAS,ikBAAf","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getAlbumCategory = /* GraphQL */ `\n  query GetAlbumCategory($id: ID!) {\n    getAlbumCategory(id: $id) {\n      id\n      title\n      albums {\n        items {\n          id\n          name\n          by\n          numberOfLikes\n          imageUri\n          artistsHeadline\n          albumCategoryId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listAlbumCategorys = /* GraphQL */ `\n  query ListAlbumCategorys(\n    $filter: ModelAlbumCategoryFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listAlbumCategorys(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        title\n        albums {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getAlbum = /* GraphQL */ `\n  query GetAlbum($id: ID!) {\n    getAlbum(id: $id) {\n      id\n      name\n      by\n      numberOfLikes\n      imageUri\n      artistsHeadline\n      songs {\n        items {\n          id\n          imageUri\n          uri\n          title\n          artist\n          albumId\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      albumCategoryId\n      albumCategory {\n        id\n        title\n        albums {\n          nextToken\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listAlbums = /* GraphQL */ `\n  query ListAlbums(\n    $filter: ModelAlbumFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listAlbums(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        name\n        by\n        numberOfLikes\n        imageUri\n        artistsHeadline\n        songs {\n          nextToken\n        }\n        albumCategoryId\n        albumCategory {\n          id\n          title\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getSong = /* GraphQL */ `\n  query GetSong($id: ID!) {\n    getSong(id: $id) {\n      id\n      imageUri\n      uri\n      title\n      artist\n      albumId\n      album {\n        id\n        name\n        by\n        numberOfLikes\n        imageUri\n        artistsHeadline\n        songs {\n          nextToken\n        }\n        albumCategoryId\n        albumCategory {\n          id\n          title\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listSongs = /* GraphQL */ `\n  query ListSongs(\n    $filter: ModelSongFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSongs(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        imageUri\n        uri\n        title\n        artist\n        albumId\n        album {\n          id\n          name\n          by\n          numberOfLikes\n          imageUri\n          artistsHeadline\n          albumCategoryId\n          createdAt\n          updatedAt\n        }\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}